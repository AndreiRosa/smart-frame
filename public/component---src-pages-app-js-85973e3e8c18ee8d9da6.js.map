{"version":3,"sources":["webpack:///./src/client-side-routes/app/CreateScene/index.js","webpack:///./src/client-side-routes/app/Scenes/index.js","webpack:///./src/client-side-routes/app/Scene/types/ChromaKey/index.js","webpack:///./src/client-side-routes/app/Scene/types/Image/index.js","webpack:///./src/client-side-routes/app/Scene/index.js","webpack:///./src/client-side-routes/app/UpdatePassword/index.js","webpack:///./src/client-side-routes/app/Devices/index.js","webpack:///./src/pages/app.js"],"names":["CreateScene","useAuth","Scene","scene","className","src","alt","to","id","name","Scenes","auth","useState","sceneName","setSceneName","scenes","setScenes","db","firebase","firestore","useEffect","isAuthReady","collection","doc","udi","onSnapshot","querySnapshot","docs","forEach","push","data","value","onChange","event","target","placeholder","type","onClick","uid","set","map","key","ChromaKey","sceneId","frame","color","showMarkers","settings","setSttings","checked","oldSettings","label","update","Image","FRAME_TYPES","chromakey","image","counter","FrameComponents","setScene","frames","setFrames","currentFrames","Object","keys","CurrentComp","Alert","role","xmlns","viewBox","d","UpdatePassword","currentPasswd","passwd","passwd2","form","setForm","error","setError","success","setSuccess","createAccount","a","length","user","currentUser","newPassword","credential","EmailAuthProvider","email","reauthenticateWithCredential","updatePassword","message","field","oldForm","classError","classIcon","x-data","x-model","fill","stroke","stroke-linecap","stroke-linejoin","stroke-width","Devices","deviceId","setDeviceId","deviceStatus","setDeviceStatus","activateDevice","docRef","get","owner","ShowEmailNotification","emailSent","setEmailSent","resendEmailVerification","emailVerified","Fragment","App","Layout","app","basepath","path"],"mappings":"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","file":"component---src-pages-app-js-85973e3e8c18ee8d9da6.js","sourcesContent":["import React from 'react'\r\nimport {useAuth} from '../../../lib/AuthContext'\r\n\r\nconst CreateScene = () => {\r\n  const auth = useAuth()\r\n  return(\r\n    <div>\r\n      <h1>Create Scene</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateScene","import React, {useState, useEffect} from 'react'\r\nimport firebase from '../../../lib/firebase'\r\nimport {useAuth} from '../../../lib/AuthContext'\r\nimport {Link} from 'gatsby'\r\n\r\nconst Scene = ({scene}) => {\r\n  return(\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img className=\"w-full\" src=\"https://source.unsplash.com/random/384x234\" alt=\"Sunset in the mountains\"/>\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-xl mb-2\">\r\n          <Link className='hover:underline' to={'app/scene/'+scene.id} >\r\n            {scene.name}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Scenes = () => {\r\n  const auth = useAuth()\r\n  const [sceneName, setSceneName] = useState('')\r\n  const [scenes, setScenes] = useState([])\r\n  const db = firebase.firestore()\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthReady){\r\n      db\r\n        .collection('scenes')\r\n        .doc(auth.udi)\r\n        .collection('scenes')\r\n        .onSnapshot(querySnapshot => {\r\n          const docs = []\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({\r\n              ...doc.data(),\r\n              id: doc.id\r\n            })\r\n        })\r\n        setScenes(docs)\r\n      })\r\n    }\r\n  }, [db, auth])\r\n  \r\n  const createScene = () => {\r\n    const newSceneRef = db\r\n      .collection('scenes')\r\n      .doc(auth.uid)\r\n      .collection('scenes')\r\n      .doc()\r\n    newSceneRef.set({\r\n      name: sceneName\r\n    })\r\n  }\r\n\r\n  const onChange = event => {\r\n    setSceneName(event.target.value)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>Scenes</h1>\r\n      <div className=\"mx-auto max-w-lg mb-12\">\r\n        <div className=\"py-1\">\r\n          <span className=\"px-1 text-sm text-gray-600\">Name your scene</span>\r\n          <input value={sceneName} name=\"sceneName\" onChange={onChange} placeholder=\"\" type=\"text\" className=\"text-md block px-3 py-2 rounded-lg w-full bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none\" />\r\n          <button type='button' onClick={createScene} className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\">\r\n            Create Scene\r\n          </button>\r\n          </div>\r\n      </div>\r\n      <div className='grid grid-cols-3 gap-4'>\r\n        {\r\n          scenes.map(scene => <Scene key={scene.id} scene={scene} />)\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scenes","import React, {useState} from 'react'\r\nimport firebase from '../../../../../lib/firebase'\r\n\r\nconst ChromaKey = ({id, uid, sceneId, frame}) => {\r\n  const db = firebase.firestore()\r\n\r\n  const COLORS = [\r\n    {value:'green', label:'Green'},\r\n    {value:'blue', label:'Blue'},\r\n    {value:'red', label:'Red'},\r\n  ]\r\n\r\n  const [settings, setSttings] = useState({\r\n    color: 'green',\r\n    showMarkers: false \r\n  })\r\n\r\n  const onChange= (event) => {\r\n    const name = event.target.name\r\n    const value = (event.target.type === 'checkbox') ? event.target.checked : event.target.value\r\n    setSttings(oldSettings => {\r\n      return {\r\n        ...oldSettings,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  const save = () => {\r\n      const newSceneRef = db\r\n      .collection('frames')\r\n      .doc(uid)\r\n      .collection(sceneId)\r\n      .doc(id)\r\n      frame.update({\r\n        settings\r\n      })\r\n \r\n  }\r\n\r\n  return(\r\n    <div className='border-solid m-8 border-gray-200 m-8 p-8'>\r\n      <h1 className='font-bold'>Chroma Key</h1>\r\n      <select onChange={onChange} name='color' value={settings.color}>\r\n        {\r\n          COLORS.map(color => <option value={color.value}>{color.label}</option>)\r\n        }\r\n      </select>\r\n      <label>\r\n        <input type='checkbox' onChange={onChange} checked={settings.showMarkers} name='showMarkers' value={true}/> Show tracking markers\r\n      </label>\r\n      <button onClick={save}>Save</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChromaKey","import React from 'react'\r\n\r\nconst Image = () => {\r\n  return(\r\n    <div className='border-solid m-8 border-gray-200 m-8 p-8'>\r\n      <h1 className='font-bold'>Image</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image","import React, {useState, useEffect} from 'react'\r\nimport {useAuth} from '../../../lib/AuthContext'\r\nimport firebase from '../../../lib/firebase'\r\nimport ChromaKey from './types/ChromaKey'\r\nimport Image from './types/Image'\r\n\r\n\r\nconst FRAME_TYPES = {\r\n  chromakey: {\r\n    key: 'chromakey',\r\n    label: 'Add chroma key'\r\n  },\r\n  image: {\r\n    key: 'image',\r\n    label: 'Add image'\r\n  },\r\n  counter: {\r\n    key: 'counter',\r\n    label: 'Add counter'\r\n  },\r\n}\r\n\r\nconst FrameComponents = {\r\n  [FRAME_TYPES.chromakey.key] : ({id}) => ChromaKey,\r\n  [FRAME_TYPES.chromakey.image]: ({id}) => Image,\r\n  [FRAME_TYPES.chromakey.counter]: ({id}  ) => <h1>Component: Counter {id}</h1>\r\n}\r\n\r\nconst Scene = ({sceneId}) => {\r\n  const auth = useAuth()\r\n  const [scene, setScene] = useState({})\r\n  const [frames, setFrames] = useState([])\r\n  const db = firebase.firestore()\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthReady){\r\n      db \r\n        .collection('scenes')\r\n        .doc(auth.udi)\r\n        .collection('scenes')\r\n        .doc(sceneId)\r\n        .onSnapshot(querySnapshot => {\r\n         setScene({\r\n            ...querySnapshot.data,\r\n            id: sceneId\r\n         }) \r\n      })\r\n\r\n      db\r\n        .collection('frames')\r\n        .doc(auth.udi)\r\n        .collection(sceneId)\r\n        .onSnapshot(querySnapshot => {\r\n          const currentFrames = []\r\n          querySnapshot.forEach(doc => {\r\n            currentFrames.push({\r\n              ...doc.data(),\r\n              id: doc.id \r\n            })\r\n          })\r\n          setFrames(currentFrames)\r\n      })\r\n    }\r\n  }, [db, auth])\r\n\r\n  const createFrame = (type) => () => {\r\n    const newSceneRef = db\r\n      .collection('frames')\r\n      .doc(auth.uid)\r\n      .collection(sceneId)\r\n      .doc()\r\n    newSceneRef.set({\r\n      type\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>{scene.name}</h1>\r\n      <div className='grid grid-cols-4 gap-4'>\r\n        {Object.keys(FRAME_TYPES).map( key => {\r\n            return(\r\n                <div key={key} onClick={createFrame(key)} className='text-center p-4 bg-white hover:bg-gray-100 h-32 w-32 shadow-md rounded flex items-end'>\r\n                  <p>{FRAME_TYPES[key].label}</p>\r\n                </div>\r\n            )\r\n          }\r\n        )}  \r\n      </div>\r\n      <div>\r\n        {\r\n          frames.map(frame => {\r\n            const CurrentComp = FrameComponents[frame.type]\r\n            return <p><CurrentComp  id={frame.id} frame={frame} uid={auth.uid} scene={sceneId}/></p>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scene","import React, {useState} from 'react'\r\n// import {Link, navigate} from 'gatsby'\r\nimport firebase from '../../../lib/firebase'\r\nimport {useAuth} from '../../../lib/AuthContext'\r\n\r\nconst Alert = () => {\r\n  return(\r\n    <div className=\"bg-teal-100 border-t-4 border-teal-500 rounded-b text-teal-900 px-4 py-3 shadow-md\" role=\"alert\">\r\n      <div className=\"flex\">\r\n        <div className=\"py-1\"><svg className=\"fill-current h-6 w-6 text-teal-500 mr-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\"/></svg></div>\r\n        <div>\r\n          <p className=\"font-bold\">Password changed</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UpdatePassword = () => {\r\n  const auth = useAuth()\r\n  const [form, setForm] = useState({\r\n    currentPasswd: '',\r\n    passwd: '',\r\n    passwd2: ''\r\n  })\r\n  const [error, setError] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const createAccount = async () => {\r\n    if(form.passwd.length >= 6 && form.passwd === form.passwd2){\r\n      try{\r\n        const user = firebase.auth().currentUser\r\n        const newPassword = form.passwd\r\n        const credential = firebase.auth.EmailAuthProvider.credential(\r\n          auth.email,\r\n          form.currentPasswd\r\n        )\r\n        \r\n        await user.reauthenticateWithCredential(credential)\r\n        await user.updatePassword(newPassword)\r\n        setSuccess(true)\r\n      } catch(error) { \r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = event => {\r\n    const value = event.target.value\r\n    const field = event.target.name\r\n    setForm(oldForm => ({\r\n      ...oldForm,\r\n      [field]: value\r\n    }))\r\n    setError('')\r\n  }\r\n\r\n  let classError = ''\r\n  let classIcon = 'rounded-full p-1 fill-current mr-2'\r\n  if(form.passwd === form.passwd2 && form.passwd.length >= 6){\r\n    classError += 'text-green-700'\r\n    classIcon += 'bg-green-200 text-green-700'\r\n  } else {\r\n    classError += 'text-red-700'\r\n    classIcon += 'bg-red-200 text-red-700'\r\n  }   \r\n\r\n  return (\r\n    <div className=\"container max-w-full mx-auto md:py-4 px-6\">\r\n      <div className=\"max-w-sm mx-auto px-6\">\r\n        <div className=\"relative flex flex-wrap\">\r\n          <div className=\"w-full relative\">\r\n            <div className=\"md:mt-2\">\r\n              {success && <Alert />}\r\n              {!success && \r\n                <>\r\n                  <div className=\"text-center font-semibold text-black\">\r\n                    Change password\r\n                  </div>\r\n                  <form className=\"mt-8\" x-data=\"{password: '',password_confirm: ''}\">\r\n                    <div className=\"mx-auto max-w-lg \"> \r\n                      <div className=\"py-1\">\r\n                        <span className=\"px-1 text-sm text-gray-600\">Current password</span>\r\n                        <input value={form.currentPasswd} name=\"currentPasswd\" onChange={onChange} placeholder=\"\" type=\"password\" className=\"text-md block px-3 py-2 rounded-lg w-full bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none\" />\r\n                      </div>\r\n                      <div className=\"py-1\">\r\n                        <span className=\"px-1 text-sm text-gray-600\">New password</span>\r\n                        <input placeholder=\"\" name='passwd' value={form.passwd} onChange={onChange} type=\"password\" x-model=\"password\" className=\"text-md block px-3 py-2 rounded-lg w-full bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none\" />\r\n                      </div>\r\n                      <div className=\"py-1\">\r\n                        <span className=\"px-1 text-sm text-gray-600\">Password Confirm</span>\r\n                        <input placeholder=\"\" name='passwd2' value={form.passwd2} onChange={onChange} type=\"password\" x-model=\"password_confirm\" className=\"text-md block px-3 py-2 rounded-lg w-full bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none\" />\r\n                      </div>\r\n                      <div className=\"flex justify-start mt-3 ml-4 p-1\">\r\n                        <ul>\r\n                          <li className=\"flex items-center py-1\">\r\n                            <div className={classIcon}>\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              {form.passwd === form.passwd2 && form.passwd.length >= 6 && <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />}\r\n                              {form.passwd !== form.passwd2 && form.passwd.length < 6 && <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />}\r\n                              </svg>\r\n                            </div>\r\n                            <span className={classError}>\r\n                              {form.passwd === form.passwd2 && form.passwd.length >= 6 && 'Passwords match.'}\r\n                              {form.passwd === form.passwd2 && form.passwd.length < 6 && 'Passwords must be at least 6 characters long.'}\r\n                              {form.passwd !== form.passwd2 && form.passwd.length > 0 && 'Passwords do not match.'}\r\n                            </span>\r\n                          </li> \r\n                          {error && <li className=\"flex items-center py-1\">\r\n                            <div className={'rounded-full p-1 fill-current bg-red-200 text-red-700  mr-2'}>\r\n                              <svg className=\"w-4 h-4\"classIcon fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                              </svg>\r\n                            </div>\r\n                            <span className={classError}>\r\n                              {error}\r\n                            </span>\r\n                          </li>}\r\n                        </ul>\r\n                      </div>\r\n                      <button type='button' onClick={createAccount} className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\">\r\n                        Update\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdatePassword","import React, {useState, useEffect} from 'react'\r\nimport firebase from '../../../lib/firebase'\r\nimport {useAuth} from '../../../lib/AuthContext'\r\n\r\nconst Devices = () => {\r\n  const auth = useAuth()\r\n  const [deviceId, setDeviceId] = useState('')\r\n  const [scenes, setScenes] = useState([])\r\n  const [deviceStatus, setDeviceStatus] = useState('')\r\n  const db = firebase.firestore()\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthReady){\r\n      db\r\n        .collection('scenes')\r\n        .doc(auth.uid)\r\n        .collection('scenes')\r\n        .onSnapshot(querySnapshot => {\r\n          const docs = []\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({\r\n              ...doc.data(),\r\n              id: doc.id\r\n            })\r\n        })\r\n        setScenes(docs)\r\n      })\r\n    }\r\n  }, [db, auth])\r\n  \r\n  const activateDevice = async () => {\r\n    const docRef = db\r\n      .collection('temp-devices')\r\n      .doc(deviceId)\r\n    const doc = await docRef.get()\r\n    const deviceData = doc.data() \r\n    if(deviceData){\r\n      setDeviceStatus('VALID')\r\n      docRef.update({\r\n        owner: auth.uid\r\n      })\r\n    } \r\n    else setDeviceStatus('INVALID') \r\n  }\r\n\r\n  const onChange = event => {\r\n    setDeviceId(event.target.value)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>Devices</h1>\r\n      <div className=\"mx-auto max-w-lg mb-12\">\r\n        <div className=\"py-1\">\r\n          <span className=\"px-1 text-sm text-gray-600\">Device ID</span>\r\n          <input value={deviceId} name=\"deviceId\" onChange={onChange} placeholder=\"\" type=\"text\" className=\"text-md block px-3 py-2 rounded-lg w-full bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none\" />\r\n        <button type='button' onClick={activateDevice} className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\">\r\n          Activate Device\r\n        </button>\r\n        {deviceStatus}\r\n       </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Devices","import React, {useState} from 'react'\r\nimport {Router} from '@reach/router'\r\nimport Layout from '../components/Layout'\r\nimport {navigate} from 'gatsby'\r\nimport {useAuth} from '../lib/AuthContext'\r\nimport CreateScene from '../client-side-routes/app/CreateScene'\r\nimport Scenes from '../client-side-routes/app/Scenes'\r\nimport Scene from '../client-side-routes/app/Scene'\r\nimport UpdatePassword from '../client-side-routes/app/UpdatePassword'\r\nimport Devices from '../client-side-routes/app/Devices'\r\n\r\nconst ShowEmailNotification = () => {\r\n  const auth = useAuth()\r\n  const [emailSent, setEmailSent] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const \r\n  useEffect = (() => {\r\n    if(auth.isAuthReady && !auth.isAuth) navigate('/sign-in')\r\n  }, [auth])\r\n\r\n  const resendEmailVerification = async () => {\r\n    try{\r\n      setError(false)\r\n      await auth.resendEmailVerification()\r\n      setEmailSent(true)\r\n    } catch(err) {\r\n      setError(true)\r\n      setEmailSent(false)\r\n\r\n    }\r\n  }\r\n  if(!auth.isAuthReady) return null\r\n  if(!auth.emailVerified){\r\n    return (\r\n      <div className='bg-orange-200 p-4'>\r\n        <p className='container mx-auto text-center'>\r\n          Please, confirm your e-mail address ({auth.email}). <br />\r\n          {!emailSent && \r\n            <button onClick={resendEmailVerification}>\r\n              Click here to re-send e-mail confirmation.\r\n            </button>\r\n          }\r\n          {emailSent && \r\n            <React.Fragment>\r\n              <br/> Verification e-mail sent. Please, check your inbox and follow the instructions.\r\n            </React.Fragment> \r\n          }\r\n          {error && \r\n            <React.Fragment>\r\n              <br/> Error! Try again in a few minutes.\r\n            </React.Fragment> \r\n          }\r\n        </p>\r\n      </div>\r\n    )\r\n  } \r\n  return null\r\n}\r\n\r\nconst App = () => {\r\n  return(\r\n      <Layout app>\r\n        <ShowEmailNotification />\r\n        <div className='container mx-auto mt-12'>\r\n          <Router basepath='/app'>\r\n            <Devices path='/devices' />\r\n            <CreateScene path='/create-scene' />\r\n            <Scenes path='/' />\r\n            <Scene path='/scene/:sceneId' />\r\n            <UpdatePassword path='/update-password' />  \r\n          </Router>\r\n        </div>\r\n     </Layout>\r\n  )\r\n}\r\n\r\nexport default App"],"sourceRoot":""}